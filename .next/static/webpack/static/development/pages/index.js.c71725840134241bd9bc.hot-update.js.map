{"version":3,"file":"static/webpack/static/development/pages/index.js.c71725840134241bd9bc.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/index.js"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React, { Component } from 'react'\nimport Playlist from '../components/Playlist'\n\nclass Index extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playlist: {}\n        }\n    }\n    handleSubmitClick = () => {\n        const { name, theme, url, artist, album } = this;\n        const postObject = {\n            name: name.value,\n            theme: theme.value,\n            url: url.value,\n            artist: artist.value,\n            album: album.value\n        }\n        console.log(postObject)\n        console.log('fetching')\n        fetch('http://localhost:3001/playlist', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postObject)\n        }).then(res => res.json())\n        .then(data => this.setState({playlist: data}))\n    }\n\n    render() {\n        return(\n            <div>\n                <input type=\"text\" placeholder=\"Playlist name\" ref={input => this.name = input} />\n                <input type=\"text\" placeholder=\"Playlist theme\" ref={input => this.theme = input} />\n                <input type=\"text\" placeholder=\"Spotify url\" ref={input => this.url = input} />\n                <input type=\"text\" placeholder=\"Artist/Band Name\" ref={input => this.artist = input} />\n                <input type=\"text\" placeholder=\"Album Title\" ref={input => this.album = input} />\n                <button type=\"submit\" onClick={this.handleSubmitClick}>Create Entry</button>\n                {this.state.playlist && <Playlist {...this.state.playlist} /> }\n            </div>\n        )\n    }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAzBA;AACA;AADA;AAFA;AAKA;AACA;;;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzCA;AACA;AA2CA;;;;A","sourceRoot":""}