{"version":3,"file":"static/webpack/static/development/pages/index.js.e94a3cd4f6d838c95c05.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Playlist from '../components/Playlist'\nimport Nav from '../components/Nav'\nimport { Formik, Field, Form } from 'formik'\n\nclass Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      playlist: {},\n      playlists: [],\n    }\n  }\n  handleSubmitClick = postObject => {\n    fetch('http://localhost:3001/playlist', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postObject),\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ playlist: data }))\n  }\n\n  handleFetchClick = () => {\n      fetch('http://localhost:3001/playlist', {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      })\n      .then(res => res.json())\n      .then(data => this.setState({playlists: data}))\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Formik\n          initialValues={{name: '', theme: '', url: '', artist: '', album: ''}}\n          onSubmit={(values) => this.handleSubmitClick(values)}\n          render={() => (\n            <Form>\n              <Field type=\"text\" name=\"name\" placeholder=\"Playlist Name\"/>\n              <Field type=\"text\" name=\"theme\" placeholder=\"Playlist Theme\" />\n              <Field type=\"text\" name=\"url\" placeholder=\"Spotify Url\" />\n              <Field type=\"text\" name=\"artist\" placeholder=\"Artist/Band Name\" />\n              <Field type=\"text\" name=\"album\" placeholder=\"Album Title\" />\n              <button type=\"submit\">Create Playlist</button>\n            </Form>\n          )}\n        \n        />\n      <Playlist {...this.state.playlist} />\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7BA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAyBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAvDA;AACA;AAyDA;;;;A","sourceRoot":""}