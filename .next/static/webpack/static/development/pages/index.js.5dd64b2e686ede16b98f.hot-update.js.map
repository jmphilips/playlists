{"version":3,"file":"static/webpack/static/development/pages/index.js.5dd64b2e686ede16b98f.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/index.js"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React, { Component } from 'react'\nimport Playlist from '../components/Playlist'\nimport Nav from '../components/Nav'\nimport { Formik, Field, Form } from 'formik'\n\nclass Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      playlist: {},\n      playlists: [],\n    }\n  }\n  handleSubmitClick = postObject => {\n    fetch('http://localhost:3001/playlist', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(postObject),\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ playlist: data }))\n  }\n\n  handleFetchClick = () => {\n      fetch('http://localhost:3001/playlist', {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      })\n      .then(res => res.json())\n      .then(data => this.setState({playlists: data}))\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Formik\n          initialValues={{name: '', theme: '', url: '', artist: '', album: ''}}\n          onSubmit={(values) => this.handleSubmitClick(values)}\n          render={() => (\n            <Form>\n              <Field type=\"text\" name=\"name\" placeholder=\"Playlist Name\"/>\n              <Field type=\"text\" name=\"theme\" placeholder=\"Playlist Theme\" />\n              <Field type=\"text\" name=\"url\" placeholder=\"Spotify Url\" />\n              <Field type=\"text\" name=\"artist\" placeholder=\"Artist/Band Name\" />\n              <Field type=\"text\" name=\"album\" placeholder=\"Album Title\" />\n              <button type=\"submit\">Create Playlist</button>\n            </Form>\n          )}\n        \n        />\n        {/* <input\n          type=\"text\"\n          placeholder=\"Playlist name\"\n          ref={input => (this.name = input)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Playlist theme\"\n          ref={input => (this.theme = input)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Spotify url\"\n          ref={input => (this.url = input)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Artist/Band Name\"\n          ref={input => (this.artist = input)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Album Title\"\n          ref={input => (this.album = input)}\n        />\n        <button type=\"submit\" onClick={this.handleSubmitClick}>\n          Create Entry\n        </button>\n        <button type=\"submit\" onClick={this.handleFetchClick}>\n            Get Entries\n        </button>\n        {(this.state.playlist.length > 0) && <Playlist {...this.state.playlist} />}\n        {this.state.playlists && this.state.playlists.map(playlist => {\n            return <Playlist key={playlist.id} {...playlist} />\n        })} */}\n               {(this.state.playlist.length > 0) && <Playlist {...this.state.playlist} />}\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7BA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAyBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1FA;AACA;AA4FA;;;;A","sourceRoot":""}